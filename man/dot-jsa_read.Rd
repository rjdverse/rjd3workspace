% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/saitem.R
\name{.jsa_read}
\alias{.jsa_read}
\alias{.jsa_results}
\alias{.jsa_jresults}
\title{Read SAItem}
\usage{
.jsa_read(jsa)

.jsa_results(jsa, items = NULL)

.jsa_jresults(jsa)
}
\arguments{
\item{jsa}{Java SAItem object.}

\item{items}{vector of characters containing the variables to extract.
See \code{\link[rjd3x13:x13_dictionary]{rjd3x13::x13_dictionary()}} or \code{\link[rjd3tramoseats:tramoseats_dictionary]{rjd3tramoseats::tramoseats_dictionary()}}.
By default, extracts all the possible variables.}
}
\description{
\code{.jsa_results()} extracts specific variables of the model of the SAItem while
\code{.jsa_read()} extracts all the informations of a SAItem (see details).
\code{.jsa_jresults()} extracts the Java object of the results of a SAItem.
}
\details{
A SAItem contains more information than just the results of a model.
All those informations are extracted with the \code{.jsa_read()} function that
returns a list with 5 objects:
\itemize{
\item \code{ts}: the raw time series.
\item \code{domainSpec}: initial specification. Reference for any relaxing of some
elements of the specification.
\item \code{estimationSpec}: specification used for the current estimation.
\item \code{pointSpec}: specification corresponding to the results of the current
estimation (fully identified model).
\item \code{results}: the result of the model.
}
}
